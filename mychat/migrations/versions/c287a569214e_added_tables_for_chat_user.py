"""Added Tables For Chat/User

Revision ID: c287a569214e
Revises: dda71a251e04
Create Date: 2025-06-18 20:55:31.317289

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "c287a569214e"
down_revision: Union[str, Sequence[str], None] = "dda71a251e04"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "messages",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("content", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("sender_id", sa.Uuid(), nullable=False),
        sa.Column("recipient_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["recipient_id"],
            ["users.uid"],
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["users.uid"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.alter_column(
        "users", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "users", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.alter_column(
        "users", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "users", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.drop_table("messages")
    # ### end Alembic commands ###
